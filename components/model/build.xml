<?xml version="1.0" encoding="utf-8"?>
<project name="model" default="install" basedir=".">

    <property name="import.dir" value="${basedir}/../antlib/resources"/>
    <import file="${import.dir}/global.xml"/>
    <import file="${import.dir}/lifecycle.xml"/>
    <import file="${import.dir}/hibernate.xml"/>

    <!-- Class that will be called via "java -jar" on this artifact -->
    <property name="main.class" value="ome.util.tasks.Run"/>

	<target name="prepare" depends="lifecycle.prepare">
		<copy todir="${classes.dir}">
			<fileset dir="${resrc.dir}" includes="ome/extra/**"/>
		</copy>
	</target>

	<!-- Lifecycle Overrides -->
	<target name="generate" depends="prepare,dsl,lifecycle.generate" unless="generate.skip">
	</target>

	<target name="dsl-init">
		<macrodef name="checkdsl">
			<attribute name="dependfile"/>
			<attribute name="template"/>
			<sequential>
			<uptodate property="dsl.@{template}.unneeded">
				<srcfiles dir="${resrc.dir}" includes="${dsl.pat}"/>
				<mapper type="merge" to="@{dependfile}"/>
			</uptodate>
			</sequential>
		</macrodef>
		<checkdsl template="object" dependfile="${src.dest}/ome/model/core/Image.java"/>
		<checkdsl template="cfg"    dependfile="${resrc.dest}/hibernate.cfg.xml"/>
		<checkdsl template="views"  dependfile="${resrc.dest}/views.sql"/>
		<checkdsl template="${omero.db.profile}-header"  dependfile="${resrc.dest}/${omero.db.profile}-header.sql"/>
		<checkdsl template="${omero.db.profile}-footer"  dependfile="${resrc.dest}/${omero.db.profile}-footer.sql"/>
		<checkdsl template="enums"  dependfile="${blitz.comp}/target/generated/resources/enums.properties"/>
		<condition property="dsl.needed">
			<not><and>
				<isset property="dsl.object.unneeded"/>
				<isset property="dsl.cfg.unneeded"/>
				<isset property="dsl.data.unneeded"/>
				<isset property="dsl.views.unneeded"/>
				<isset property="dsl.enums.unneeded"/>
				<isset property="dsl.${omero.db.profile}-header.unneeded"/>
				<isset property="dsl.${omero.db.profile}-footer.unneeded"/>
			</and></not>
		</condition>
	</target>

	<target name="dsl" depends="dsl-init" if="dsl.needed">
		<taskdef classname="ome.dsl.DSLTask" classpathref="omero.classpath" name="basedsl"/>
		<presetdef name="dsl">
			<basedsl profile="${omero.db.profile}"/>
		</presetdef>
		<dsl template="ome/dsl/object.vm" filepattern="${src.dest}/{package-dir}/{class-name}.java"><fileset dir="${resrc.dir}" includes="${dsl.pat}"/></dsl>
		<dsl template="ome/dsl/cfg.vm" filepattern="${resrc.dest}/hibernate.cfg.xml"><fileset dir="${resrc.dir}" includes="${dsl.pat}"/></dsl>
		<dsl template="ome/dsl/views.vm" filepattern="${resrc.dest}/views.sql"><fileset dir="${resrc.dir}" includes="${dsl.pat}"/></dsl>
		<dsl template="ome/dsl/enums.vm" filepattern="${blitz.comp}/target/generated/resources/enums.properties"><fileset dir="${resrc.dir}" includes="${dsl.pat}"/></dsl>
		<dsl template="ome/dsl/enums_update.vm" filepattern="${resrc.dest}/enums_update.sql"><fileset dir="${resrc.dir}" includes="${dsl.pat}"/></dsl>
                <dsl template="ome/dsl/${omero.db.profile}-header.vm" filepattern="${resrc.dest}/${omero.db.profile}-header.sql"><fileset dir="${resrc.dir}" includes="${dsl.pat}"/></dsl>
                <dsl template="ome/dsl/${omero.db.profile}-footer.vm" filepattern="${resrc.dest}/${omero.db.profile}-footer.sql"><fileset dir="${resrc.dir}" includes="${dsl.pat}"/></dsl>
		<delete>
			<fileset dir="${src.dest}" includes="**/*.java">
				<present present="both" targetdir="${src.dir}"/>
			</fileset>
		</delete>
	</target>

	<target name="dist" depends="lifecycle.dist" description="Copies HBM files to dist">
		<copy todir="${dist.dir}/include">
			<fileset dir="${src.dest}" includes="**/*.hbm.xml"/>
			<fileset dir="${resrc.dest}" includes="**/*.hbm.xml"/>
		</copy>
	</target>

	<target name="generate-schema" depends="generate,_generate-schema" description="Generates SQL based on Hibernate mappings">
        </target>

	<target name="_generate-schema" depends="generate" description="Internal developer target which doesn't run codegen">
		<concat destfile="${resrc.dest}/hibernatetool.properties" append="false">
hibernate.dialect=${omero.db.generate_dialect}
		</concat>
		<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="omero.classpath" />
		<hibernatetool destdir="${target.dir}/generated/ant">
			<annotationconfiguration configurationfile="${resrc.dest}/hibernate.cfg.xml" propertyfile="${resrc.dest}/hibernatetool.properties">
				<fileset dir="${resrc.dir}" includes="*.hbm.xml"/>
			</annotationconfiguration>
			<hbm2ddl destdir="${resrc.dest}" outputfilename="ddl.sql" drop="false" console="false" format="true" export="false" delimiter="${omero.db.delimiter}"/>
		</hibernatetool>
		<replaceregexp
			match="alter\stable\s(.*?)\sadd\sconstraint\s(.*?\w);"
			replace="alter table \1 add constraint \2 ${omero.db.defer} ;"
			flags="gs" byline="false">
                        <!-- Extra space before ';' prevents multiple replacements -->
			<fileset dir="${resrc.dest}" includes="ddl.sql"/>
		</replaceregexp>
		<taskdef name="schemavalidator" classname="org.hibernate.tool.hbm2ddl.SchemaValidatorTask" classpathref="omero.classpath"/>
		<!-- Disabled -->
		<!--schemavalidator properties="${resrc.dest}/local.properties" config="${basedir}/test/test.cfg.xml"/-->
        </target>

        <target name="publish-schema" depends="generate-schema" description="Copies SQL from generate-schema to main sql/ directory">
		<mkdir dir="${sql.dir}"/>
		<copy file="${resrc.dest}/ddl.sql" tofile="${sql.dir}/schema.sql"/>
		<copy file="${resrc.dest}/views.sql" tofile="${sql.dir}/views.sql"/>
		<copy file="${resrc.dest}/enums_update.sql" tofile="${sql.dir}/enums_update.sql"/>
		<copy file="${resrc.dest}/${omero.db.profile}-header.sql" tofile="${sql.dir}/${omero.db.profile}-header.sql"/>
		<copy file="${resrc.dest}/${omero.db.profile}-footer.sql" tofile="${sql.dir}/${omero.db.profile}-footer.sql"/>
		<replace file="${sql.dir}/${omero.db.profile}-footer.sql" token="@DBPATCH@" value="${omero.db.patch}"/>
		<replace file="${sql.dir}/${omero.db.profile}-footer.sql" token="@DBVERSION@" value="${omero.db.version}"/>
	</target>

    <!-- = = = = = = = = = = = = = = = = =
          misc
         = = = = = = = = = = = = = = = = = -->

    <target name="schemaupdate" depends="prepare,load-hibernate">
        <taskdef name="schemaupdate"
            classname="org.hibernate.tool.hbm2ddl.SchemaUpdateTask"
            classpathref="omero.classpath"/>

        <schemaupdate
            properties="${resrc.dest}/local.properties" text="true" quiet="no">
            <fileset dir="${classes.dir}">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </schemaupdate>
    </target>

    <target name="schemavalidate" depends="prepare,load-hibernate">
        <taskdef name="schemavalidator"
            classname="org.hibernate.tool.hbm2ddl.SchemaValidatorTask"
            classpathref="omero.classpath"/>

        <schemavalidator
            properties="${resrc.dest}/local.properties">
            <fileset dir="${classes.dir}">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </schemavalidator>
    </target>

</project>
