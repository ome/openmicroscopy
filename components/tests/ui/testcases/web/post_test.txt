*** Settings ***
Documentation     Tests ajax 'POST' updates.

Resource          ../../resources/config.txt
Resource          ../../resources/web/login.txt
Resource          ../../resources/web/tree.txt

Suite Setup         Run Keywords  User "${USERNAME}" logs in with password "${PASSWORD}"  Maximize Browser Window
Suite Teardown      Close all browsers

*** Test Cases ***

Test Delete Project
    [Documentation]     Create and Delete a Project

    Select Experimenter
    ${pid}=                                 Create project      robot test delete
    Click Element                           refreshButton
    Wait Until Page Contains Element        id=project-${pid}
    Click Element                           id=deleteButton
    Wait Until Page Contains Element        id=delete-dialog-form
    Click Element                           xpath=//button/span[contains(text(),'Yes')]
    # On POST success, Experimenter should be selected and project removed from tree
    Wait Until Page Contains Element        xpath=//li[@rel='experimenter']/a[contains(@class, 'jstree-clicked')]
    Page Should Not Contain Element         id=project-${pid}


Test Edit Project
    [Documentation]     Create a Project and edit its name and description

    Select Experimenter
    ${pid}=                                 Create project      robot test edit
    Wait Until Page Contains Element        projectname-${pid}
    # Edit Name
    Click Element                           css=#projectname-${pid} button.btn_edit
    Wait Until Page Contains Element        form-projectname-${pid}
    # id 'id_name' is not unique!
    Input Text                              xpath=//form[@id='form-projectname-${pid}']//input[@id='id_name']  editedName
    Submit Form                             form-projectname-${pid}
    Wait Until Page Contains Element        xpath=//span[@id='projectname-${pid}-name'][contains(text(), 'editedName')]

    # Edit Description
    Click Element                           css=#projectdescription-${pid} button.btn_edit
    Wait Until Page Contains Element        form-projectdescription-${pid}
    Input Text                              xpath=//form[@id='form-projectdescription-${pid}']//textarea[@id='id_description']  newDesc
    Submit Form                             form-projectdescription-${pid}
    Wait Until Page Contains Element        xpath=//span[@id='projectdescription-${pid}-description'][contains(text(), 'newDesc')]


Test Copy Paste Dataset
    [Documentation]     Create 2 Projects and a Dataset. Copy and Paste the Dataset.

    Select Experimenter
    ${p1id}=                                Create project      robot test paste1
    ${p2id}=                                Create project      robot test paste2
    ${did}=                                 Create Dataset
    Click Element                           refreshButton
    Wait Until Page Contains Element        id=dataset-${did}
    Click Element                           id=copyButton
    Click Element                           xpath=//li[@id='project-${p1id}']/a
    Click Element                           id=pasteButton
    Click Element                           refreshButton
    # Check for expected Project / Dataset hierarchy
    Wait Until Page Contains Element        xpath=//li[@id='project-${p1id}']//li[@id='dataset-${did}']


Test Cut Paste Dataset
    [Documentation]     Create 2 Projects and a Dataset. Cut and Paste the Dataset.

    Select Experimenter
    ${p1id}=                                Create project      robot test paste1
    ${p2id}=                                Create project      robot test paste2
    ${did}=                                 Create Dataset
    Click Element                           refreshButton
    Wait Until Page Contains Element        id=dataset-${did}
    Click Element                           id=cutButton
    # POST a /move/ action - wait for Orphaned Dataset
    Wait Until Page Contains Element        xpath=//li[@rel='experimenter']/ul/li[@id='dataset-${did}']
    # Another /move/ to different Project
    Click Element                           xpath=//li[@id='project-${p1id}']/a
    Click Element                           id=pasteButton
    Click Element                           refreshButton
    Wait Until Page Contains Element        xpath=//li[@id='project-${p1id}']//li[@id='dataset-${did}']


Test Cut Paste Image
    [Documentation]     Cut an existing Image to /remove/ it to Orphaned and Paste it back

    Select Experimenter
    ${iid}=                                 Select And Expand Image
    Click Element                           id=cutButton
    # Dataset should be selected, paste back
    Wait Until Page Contains Element        xpath=//li[@rel='dataset']/a[@class='jstree-clicked']
    ${did}=                                 Get Element Attribute   xpath=//li[a/@class='jstree-clicked']@id
    Click Element                           id=pasteButton
    Wait Until Page Contains Element        xpath=//li[@id='${did}']//li[@id='${iid}']


Test Chgrp
    [Documentation]     Tests chgrp of a Project to any other group

    # Clear any activities from earlier tests etc.
    Click Element                           id=launch_activities
    Click Element                           id=clear_activities
    Select Experimenter
    ${pid}=                                 Create project      robot test chgrp
    Click Element                           refreshButton
    Wait Until Page Contains Element        id=project-${pid}
    Open Context Menu                       xpath=//li[@id='project-${pid}']/a
    Mouse Over                              xpath=//div[@id='vakata-contextmenu']//a[@rel='chgrp']
    # Click Element                           css=#vakata-contextmenu li[4] li   # first visible submenu item
    Click Element                           xpath=//div[@id='vakata-contextmenu']//li[4]//li/a
    Wait Until Page Contains Element        id=chgrp-form
    Submit Form                             id=chgrp-form
    Click Element                           id=launch_activities
    Wait Until Page Contains                Project moved to Group              60


Test Rdef Copy Paste Save
    [Documentation]     Copy and Paste rdef, then save

    Select Experimenter
    Select And Expand Image
    Wait Until Page Contains Element        xpath=//h2[contains(@class, 'data_heading_id')][contains(text(), 'image')]
    ${imageId}=                             Get Text                    xpath=//h2[contains(@class, 'data_heading_id')]/strong
    Click Link                              Preview
    Wait Until Page Contains Element        id=viewport-img
    Sleep                                   0.5
    Click Element                           xpath=//button[contains(@class, "copy_rdef")]
    Wait Until Page Contains Element        xpath=//button[contains(@class, "paste_rdef")][not(@disabled="disabled")]
    # Test success of paste in right-click menu by thumbnail refresh
    ${thumbSrc}=                            Execute Javascript  return $("#image_icon-${imageId} img").attr('src')
    Open Context Menu                       xpath=//li[@id='image-${imageId}']/a
    Mouse Over                              xpath=//div[@id='vakata-contextmenu']//a[@rel='renderingsettings']
    Click Element                           xpath=//div[@id='vakata-contextmenu']//a[contains(text(), "Paste and Save")]    #li[6]//li[2]/a   # Paste
    # Confirm dialog (make sure we pick the currently visible dialog)
    Click Element                           xpath=//div[contains(@class,'ui-dialog')][contains(@style,'display: block')]//button/span[contains(text(), 'OK')]
    Wait For Condition                      return ($("#image_icon-${imageId} img").attr('src') != '${thumbSrc}')
    # Test Set Owner's in same way
    ${thumbSrc}=                            Execute Javascript  return $("#image_icon-${imageId} img").attr('src')
    Open Context Menu                       xpath=//li[@id='image-${imageId}']/a
    Mouse Over                              xpath=//div[@id='vakata-contextmenu']//a[@rel='renderingsettings']
    Click Element                           xpath=//div[@id='vakata-contextmenu']//a[contains(text(), "Set Owner")]   # Set Owner's
    # Confirm dialog (make sure we pick the currently visible dialog)
    Click Element                           xpath=//div[contains(@class,'ui-dialog')][contains(@style,'display: block')]//button/span[contains(text(), 'OK')]
    Wait For Condition                      return ($("#image_icon-${imageId} img").attr('src') != '${thumbSrc}')

    Go To                                   ${WELCOME URL}img_detail/${imageId}
    # Toggle the color, then paste settings and check it has reverted
    Wait Until Page Contains Element        id=wblitz-ch0
    ${checked1}=                            Execute Javascript  return ($("#wblitz-rmodel:checked").length == 1)
    Click Element                           id=wblitz-rmodel
    ${checked2}=                            Execute Javascript  return ($("#wblitz-rmodel:checked").length == 1)
    Should Not Be True                      "${checked1}" == "${checked2}"
    Click Link                              Edit
    Click Element                           xpath=//button[contains(@class, "paste_rdef")]
    ${selector}=                            Set Variable If    ${checked1}    1    0
    Log   ${selector}
    Wait For Condition                      return ($("#wblitz-rmodel:checked").length == ${selector})

    # Toggle the color again, Save, refresh page to check
    Set Selenium Speed                      0.5
    Click Element                           id=wblitz-rmodel
    Wait Until Page Contains Element        id=rdef-setdef-btn
    Click Element                           id=rdef-setdef-btn
    # Wait for response
    Wait Until Page Contains Element        id=weblitz-viewport-msg
    Wait For Condition                      return ($(".blockUI").length == 0)
    Reload Page
    Wait Until Page Contains Element        id=wblitz-ch0
    ${checked3}=                            Execute Javascript  return ($("#wblitz-rmodel:checked").length == 1)
    Should Be True                          "${checked2}" == "${checked3}"

