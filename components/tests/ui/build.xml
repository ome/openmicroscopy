<?xml version="1.0" encoding="utf-8"?>
<project name="ui-scripts" default="install" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Copyright 2012-3 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore, josh at glencoesoftware.com
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-->
    <description>
        The from-a-distance automated operations on OMERO client UIs
        that are performed by Robot Framework. At present this build
        file simply compiles the Java source for custom script
        keywords.
    </description>

    <!-- run jybot with various arguments. Used to run insight tests.-->
    <macrodef name="run_jybot">
        <attribute name="filename"/>
        <attribute name="output"/>
        <sequential>
            <exec executable="jybot" failonerror="false" dir="${reports.insight}">
                <env key="CLASSPATH" value="${insight.dir}/app/libs/*:${insight.dir}/dist/omero.insight.jar:${target.dir}/java-ui-libraries-${omero.version}.jar:${lib.dir}/repository/swinglibrary-${versions.robotframework.swinglibrary}.jar"/>
                    <arg value="-d"/>
                    <arg value="@{output}"/>
                    <arg value="--loglevel"/>
                    <arg value="debug"/>
                    <element name="args" implicit="true"/>
                    <arg value="${basedir}/testcases/insight/${filename}"/>
            </exec>
        </sequential>
    </macrodef>

    <!-- run pybot with various arguments. Used to run web tests.-->
    <macrodef name="run_pybot">
        <attribute name="output"/>
        <element name="args" implicit="true"/>
        <sequential>
            <exec executable="pybot" failonerror="false" dir="${output}">
                <env key="PYTHONPATH" path="${basedir}/library/python:${env.PYTHONPATH}"/>
                 <args/>
            </exec>
        </sequential>
    </macrodef>

    <!-- point the build file used to generate the ui libraries -->
    <macrodef name="librarybuild">
        <attribute name="target"/>
        <sequential>
            <ant antfile="${basedir}/library/java/build.xml" inheritAll="false" inheritRefs="false" target="@{target}">
            </ant>
        </sequential>
    </macrodef>


    <!-- reports for the web tests. -->
    <property name="reports.web" value="${basedir}/target/reports/web"/>

    <!-- reports for the insight tests. -->
    <property name="reports.insight" value="${basedir}/target/reports/insight"/>


    <property name="main.class" value="NONE"/>

    <property name="import.dir" value="${basedir}/../../antlib/resources"/>

    <property name="target.dir" value="${basedir}/../../../target/repository"/>

    <property name="insight.dir" value="${basedir}/../../insight/OUT"/>

    <!-- file created while running the web-chrome target -->
    <property name="google.log" value="${basedir}/libpeerconnection.log"/>

    <import file="${import.dir}/global.xml"/>
    <import file="${import.dir}/lifecycle.xml"/>

    <!-- set up the directory for insight reports -->
    <target name="setup-dir">
        <mkdir dir="${reports.insight}" />
        <!-- copy the config folder. This should be modified later -->
        <mkdir dir="${reports.insight}/config"/>
        <copy todir="${reports.insight}/config" verbose="yes" flatten="yes" failonerror="no">
            <fileset dir="${insight.dir}/../config"/>
        </copy>
    </target>

    <!--  run the web and insight tests -->
    <target name="ui-test-all" unless="env.NOPYTHON" depends="clean">
        <antcall target="ui-test-insight" inheritRefs="true" inheritAll="true"/>
        <antcall target="ui-test-web" inheritRefs="true" inheritAll="true"/>
    </target>


    <!-- run all the tests for insight -->
    <target name="run_all_insight" depends="setup-dir">
        <!-- execute sub-directory per sub-directory -->
        <for param="file">
            <path>
                <dirset dir="${basedir}/testcases/insight" includes="*"/>
            </path>
            <sequential>
                <local name="filename" />
                <basename property="filename" file="@{file}"/>
                <var name="output" value="${reports.insight}/${filename}"/>
                <mkdir dir="${output}" />
                <run_jybot filename="${filename}" output="${output}"/>
            </sequential>
        </for>
    </target>

    <!-- run the tests in the specified folder -->
    <target name="run_folder_insight" depends="setup-dir">
        <var name="filename" value="${FOLDER}"/>
        <var name="output" value="${reports.insight}/${filename}"/>
        <mkdir dir="${output}" />
        <run_jybot filename="testcases/insight/${filename}" output="${output}"/>
    </target>

    <!-- run the specified test -->
    <target name="run_single_insight" depends="setup-dir">
        <var name="filename" value="${TEST}"/>
        <dirname file="${filename}" property="filename.parent" />
        <basename property="parent" file="${filename.parent}"/>
        <var name="output" value="${reports.insight}/${parent}"/>
        <mkdir dir="${output}" />
        <run_jybot filename="testcases/insight/${filename}" output="${output}"/>
    </target>

    <!--  run the insight tests -->
    <target name="ui-test-insight" depends="setup-dir">
        <if><isset property="FOLDER"/><then>
            <antcall target="run_folder_insight" inheritRefs="true" inheritAll="true"/></then>
            <elseif><isset property="TEST"/><then>
            <antcall target="run_single_insight" inheritRefs="true" inheritAll="true"/></then>
            </elseif>
            <else>
                <antcall target="run_all_insight" inheritRefs="true" inheritAll="true"/>
            </else>
        </if>  
    </target>

    <!--  run all the web tests -->
    <target name="ui-test-web">
        <antcall target="web-firefox" inheritRefs="true" inheritAll="true"/>
        <antcall target="web-chrome" inheritRefs="true" inheritAll="true"/>
    </target>

   <!-- test with firefox -->
    <target name="web-firefox">
        <var name="output" value="${reports.web}/firefox"/>
        <mkdir dir="${output}"/>
        <var name="target" value="web/"/>
        <if><isset property="TEST"/>
            <then>
                <var name="target" value="web/${TEST}"/>
            </then>
        </if>
        
        <run_pybot output="${output}">
            <arg value="-d"/>
            <arg value="${output}"/>
            <arg value="--loglevel"/>
            <arg value="debug"/>
            <arg value="${basedir}/testcases/${target}"/>
        </run_pybot>
    </target>

    <!-- test with chrome This requires the chrome driver to be installed-->
    <target name="web-chrome"> 
        <var name="output" value="${reports.web}/chrome"/>
        <mkdir dir="${output}"/>
        <var name="target" value="web/"/>
        <if><isset property="TEST"/>
            <then>
                <var name="target" value="web/${TEST}"/>
            </then>
        </if>
        <run_pybot output="${output}">
            <arg value="-d"/>
            <arg value="${output}"/>
            <arg value="-v"/>
            <arg value="browser:chrome"/>
            <arg value="--loglevel"/>
            <arg value="debug"/>
            <arg value="${basedir}/testcases/${target}"/>
        </run_pybot>
        <if>
            <available file="${google.log}"/>
            <then>
                <move file="${google.log}" todir="${reports.web}/chrome"/>
            </then>
        </if>
        
    </target>

    <target name="tests-dist">
        <librarybuild target="dist"/>
    </target>

    <target name="package" depends="lifecycle.package">
        <librarybuild target="jar"/>
    </target>

    <!-- delete the reports directory -->
    <target name="tests-clean" depends="clean">
    <delete dir="${basedir}/target"/>
    <librarybuild target="clean"/>
    </target>

       <!-- compile the unit tests under library/java/test -->
    <target name="test-compile" description=""/>

    <!-- no-operation -->
    <target name="integration" description=""/>

    <target name="test">
        <librarybuild target="test"/>
    </target>
</project>
