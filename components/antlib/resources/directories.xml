<?xml version="1.0" encoding="utf-8"?>
<project name="directories" basedir="." default="">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
# 
# Copyright 2006 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
# 
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  DOCUMENTATION:
  ==============================================================================
  Provides the locations of all build related elements. Concrete
  (hard-coded) paths should be avoided at all costs

-->

	<!-- Patterns -->
        <property name="dsl.pat" value="**/*.ome.xml"/>
        <property name="hbm.pat" value="**/*.hbm.xml"/>
        <property name="api.pat" value="**/*.java"/>
        <property name="ice.pat" value="**/*.ice"/>

	<!-- Setup: needed calculations for other paths -->
	<!-- import.dir is set in global.xml -->
	<dirname property="antlib.dir"     file="${import.dir}"/>
	<dirname property="components.dir" file="${antlib.dir}"/>
	<dirname property="root.dir"       file="${components.dir}"/>

	<!-- Absolute paths: same for all components -->
	<property name="omero.home"    value="${root.dir}"/>
	<property name="etc.dir"       value="${root.dir}/etc" />
	<property name="lib.dir"       value="${root.dir}/lib" />
	<property name="tools.dir"     value="${root.dir}/lib/tools" />
	<property name="dist.dir"      value="${root.dir}/dist" />

	<!-- Components -->
	<property name="dsl.comp"       value="${components.dir}/dsl"/>
	<property name="model.comp"     value="${components.dir}/model"/>
	<property name="common.comp"    value="${components.dir}/common"/>
	<property name="server.comp"    value="${components.dir}/server"/>
	<property name="nio.comp"       value="${components.dir}/romio"/>
	<property name="render.comp"    value="${components.dir}/rendering"/>
	<property name="import.comp"    value="${components.dir}/importer"/>
	<property name="blitz.comp"     value="${components.dir}/blitz"/>
	<property name="tools.comp"     value="${components.dir}/tools"/>
	<property name="insight.comp"   value="${components.dir}/insight"/>
	<property name="OmeroCpp.comp"     value="${tools.comp}/OmeroCpp"/>
	<property name="OmeroJava.comp"     value="${tools.comp}/OmeroJava"/>
	<property name="OmeroImporter.comp"     value="${tools.comp}/OmeroImporter"/>
	<property name="OmeroImageJ.comp"     value="${tools.comp}/OmeroImageJ/Omero_ImageJ"/>
	<property name="OmeroWeb.comp"     value="${tools.comp}/OmeroWeb"/>
	<property name="OmeroPy.comp"     value="${tools.comp}/OmeroPy"/>
	<property name="OmeroFs.comp"     value="${tools.comp}/OmeroFS"/>
	<property name="OmeroMatlab.comp"     value="${tools.comp}/OmeroM"/>

	<!-- Build Path References -->
	<path id="blitz.buildpath">
	  <pathelement location="${blitz.comp}/build.xml"/>
	</path>
	<path id="dsl.buildpath">
	  <pathelement location="${dsl.comp}/build.xml"/>
	</path>
	<path id="common.buildpath">
	  <pathelement location="${common.comp}/build.xml"/>
	</path>
	<path id="model.buildpath">
	  <pathelement location="${model.comp}/build.xml"/>
	</path>
	<path id="server.buildpath">
	  <pathelement location="${server.comp}/build.xml"/>
	</path>
	<path id="OmeroImporter.buildpath">
	  <pathelement location="${OmeroImporter.comp}/build.xml"/>
	</path>
	<path id="OmeroImageJ.buildpath">
	  <pathelement location="${OmeroImageJ.comp}/build.xml"/>
	</path>
	<path id="insight.buildpath">
	  <pathelement location="${insight.comp}/build.xml"/>
	</path>
	<path id="OmeroWeb.buildpath">
	  <pathelement location="${OmeroWeb.comp}/build.xml"/>
	</path>
	<path id="OmeroCpp.buildpath">
	  <pathelement location="${OmeroCpp.comp}/build.xml"/>
	</path>
	<path id="OmeroJava.buildpath">
	  <pathelement location="${OmeroJava.comp}/build.xml"/>
	</path>
	<path id="OmeroMatlab.buildpath">
	  <pathelement location="${OmeroMatlab.comp}/build.xml"/>
	</path>
	<path id="OmeroPy.buildpath">
	  <pathelement location="${OmeroPy.comp}/build.xml"/>
	</path>
	<path id="OmeroFs.buildpath">
	  <pathelement location="${OmeroFs.comp}/build.xml"/>
	</path>
	<path id="tools.buildpath">
	  <pathelement location="${tools.comp}/build.xml"/>
	</path>

	<!-- Tools -->
	<property name="tools.comp"    value="${components.dir}/tools"/>
	<property name="tools.dest"    value="${components.dir}/tools/target"/>
	<property name="tools.jars"    value="${components.dir}/tools/target/jars"/>
	<property name="tools.classes" value="${components.dir}/tools/target/service-classes"/>

	<!-- Relative paths -->
	<property name="target.rel"    value="target"/>
	<property name="classes.rel"   value="${target.rel}/classes"/>
	<property name="generated.rel" value="${target.rel}/generated"/>
	<property name="emmaclasses.rel" value="${target.rel}/emma-classes"/>
	<property name="testclasses.rel" value="${target.rel}/test-classes"/>
	<property name="testreports.rel" value="${target.rel}/reports"/>

	<!-- Directories relative to basedir: different for each component -->
	<property name="src.dir"         value="${basedir}/src" />
	<property name="resrc.dir"       value="${basedir}/resources"/>
	<property name="test.dir"        value="${basedir}/test"/>

	<!-- Target destinations for generated code-->
	<property name="target.dir"      value="${basedir}/${target.rel}" />
	<property name="generated.dir"   value="${basedir}/${generated.rel}"/>
	<property name="classes.dir"     value="${basedir}/${classes.rel}"/>
	<property name="emmaclasses.dir" value="${basedir}/${emmaclasses.rel}"/>
	<property name="testclasses.dir" value="${basedir}/${testclasses.rel}"/>
	<property name="testreports.dir" value="${basedir}/${testreports.rel}"/>
	<property name="src.dest"        value="${generated.dir}/src" />
	<property name="resrc.dest"      value="${generated.dir}/resources"/>
	<property name="done.dir"        value="${generated.dir}/.done"/>

	<path id="source.path">
		<fileset dir="${src.dir}">
			<include name="**/*.java"/>
			<exclude name="**/.svn"/>
		</fileset>
		<fileset dir="${src.dest}">
			<include name="**/*.java"/>
		</fileset>
	</path>

	<macrodef name="copyResourceDir">
		<attribute name="todir"/>
		<attribute name="fromdir"/>
		<sequential>
		<copy todir="@{todir}">
		<fileset dir="@{fromdir}">
			<include name="**/*.properties"/>
			<include name="**/*.vm"/>
			<include name="**/*.dv"/>
			<include name="**/*.bmp"/>
			<include name="**/*.jpg"/>
			<include name="**/*.xml"/>
			<include name="**/*.ldif"/>
			<exclude name="**/.svn"/>
		</fileset>
		</copy>
		</sequential>
	</macrodef>

	<macrodef name="copyResources">
		<sequential>
		<!-- Ignoring missining resources directories -->
		<if><available file="${resrc.dir}"></available><then>
			<copyResourceDir todir="${classes.dir}" fromdir="${resrc.dir}"/>
		</then></if>
		<if><available file="${resrc.dest}"></available><then>
			<copyResourceDir todir="${classes.dir}" fromdir="${resrc.dest}"/>
		</then></if>
		</sequential>
	</macrodef>

	<macrodef name="copyTestResources">
		<sequential>
		<copyResourceDir todir="${testclasses.dir}" fromdir="${test.dir}"/>
		</sequential>
	</macrodef>

	<macrodef name="makeDirectories">
		<sequential>
		<mkdir dir="${target.dir}" />
		<mkdir dir="${done.dir}" />
		<mkdir dir="${src.dest}" />
		<mkdir dir="${resrc.dest}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${testclasses.dir}" />
		<mkdir dir="${testreports.dir}" />
		</sequential>
	</macrodef>

</project>
