<?xml version="1.0" encoding="utf-8"?>
<project name="OmeroImporter" default="tools-dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2008 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore, josh at glencoesoftware.com
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-->
    <description>
        Build framework for the OmeroImporter GUI code. The shipped application
        is primarily built through the Eclipse .project and .classpath files,
        but this build is here to allow continuous integration testing.
    </description>

    <property name="main.class" value="ome.formats.importer.gui.GuiImporter"/>

    <dirname property="up-two" file="${basedir}"/>
    <dirname property="up-one" file="${up-two}"/>
    <property name="import.dir"       value="${up-one}/antlib/resources"/>
    <property name="importer.name" value="OMERO.importer"/>
    <import file="${import.dir}/global.xml"/>
    <import file="${import.dir}/lifecycle.xml"/>

    <import file="../common.xml"/>

    <path id="jarbundler.classpath">
        <fileset dir="${omero.home}/lib/repository" includes="jarbundler*.jar"/>
    </path>

    <taskdef name="jarbundler"
             classpathref="jarbundler.classpath"
             classname="net.sourceforge.jarbundler.JarBundler"/>

    <target name="exe4j-check-exists">
        <condition property="exe4j.exists">
            <available file="${exe4j.home}/bin/ant.jar"/>
        </condition>
    </target>

    <target name="exe4j-echo-on-missing" unless="exe4j.exists">
        <echo message="exe4j not present at ${exe4j.home}/bin/ant.jar, skipping exe4j tasks."/>
    </target>

    <target name="exe4j-init" depends="exe4j-check-exists,exe4j-echo-on-missing" if="exe4j.exists">
        <echo message="exe4j present at ${exe4j.home}, preparing exe4j tasks."/>
        <taskdef name="exe4j"
                 classpath="${exe4j.home}/bin/ant.jar"
                 classname="com.exe4j.Exe4JTask"/>
    </target>

    <target name="package" depends="lifecycle.package">
        <copy todir="${target.dir}">
            <fileset dir="${basedir}" includes="config/**/*"/>
        </copy>
        <copy todir="${target.dir}" flatten="true">
            <fileset dir="${basedir}" includes="scripts/*"/>
        </copy>
        <chmod perm="a+x">
            <fileset dir="${target.dir}" includes="importer-*,test-engine,metadata-validator"/>
        </chmod>
        <jar destfile="${target.dir}/${ivy.module}.jar" update="true">
            <fileset dir="${resrc.dir}" includes="*.icns"/>
            <fileset dir="${src.dir}" includes="**/*.png"/>
            <fileset dir="${src.dir}" includes="**/*.gif"/>
        </jar>
    </target>

    <target name="release-zip" depends="package,install"
            description="Zip the OMERO.importer releases up">
        <zip destfile="target/${importer.name}-${omero.version}.zip">
            <zipfileset dir="${basedir}" prefix="${importer.name}-${omero.version}"
                includes="config/**/*"/>
            <zipfileset dir="${target.dir}/client-libs" prefix="${importer.name}-${omero.version}/libs"
                includes="**/*"/>
            <zipfileset dir="${target.dir}" prefix="${importer.name}-${omero.version}"
                includes="${ivy.module}.jar"/>
            <zipfileset dir="${basedir}/scripts" prefix="${importer.name}-${omero.version}"
                includes="*" filemode="755"/>
        </zip>
    </target>

    <target name="release-osx" depends="package,install"
            description="Create a MacOS X executable bundle">
        <jarbundler dir="${basedir}"
                name="OMERO.importer"
                mainclass="ome.formats.importer.Main"
                version="${omero.version}"
                infostring="OMERO.importer Java Client, ${omero.version}"
                aboutmenuname="OMERO.importer"
                screenmenu="true"
                icon="${basedir}/resources/omeroImporterLogo.icns"
                stubfile="${basedir}/JavaApplicationStub"
                jvmversion="1.5+"
                vmoptions="-Xmx512M">
            <jarfileset dir="${target.dir}/client-libs" includes="**"/>
            <jarfileset dir="${target.dir}" includes="${ivy.module}.jar"/>
        </jarbundler>
    </target>

    <target name="release-osx-zip" depends="release-osx"
            description="Zip up the OMERO.importer release for MacOS X">
        <zip destfile="target/${importer.name}-${omero.version}-mac.zip">
            <zipfileset dir="${basedir}" prefix="${importer.name}-${omero.version}"
                includes="config/**/*,OMERO.importer.app/**/*"
                excludes="**/JavaApplicationStub"/>
            <zipfileset file="${basedir}/JavaApplicationStub"
                fullpath="${importer.name}-${omero.version}/OMERO.importer.app/Contents/MacOS/JavaApplicationStub"
                filemode="755"/>
        </zip>
    </target>

    <target name="release-win" depends="package,install,exe4j-init" if="exe4j.exists"
            description="Create a Windows executable bundle">
            <exe4j projectfile="OmeroImporter.exe4j"/>
            <exe4j projectfile="OmeroImporter_64.exe4j"/>
    </target>

    <target name="release-win-zip" depends="release-win"
            description="Zip up the OMERO.importer release for Windows">
        <zip destfile="target/${importer.name}-${omero.version}-win.zip">
            <zipfileset dir="${basedir}" prefix="${importer.name}-${omero.version}"
                includes="config/**/*"/>
            <zipfileset dir="${target.dir}/client-libs" prefix="${importer.name}-${omero.version}/libs"
                includes="**/*"/>
            <zipfileset dir="${target.dir}" prefix="${importer.name}-${omero.version}"
                includes="${ivy.module}.jar,*.exe"/>
        </zip>
    </target>

    <target name="tools-init"/>

    <target name="tools-build" depends="tools-init,install" description="Creates all artifacts for tools/target">
        <ivy:resolve file="${basedir}/ivy.xml" type="jar" conf="client" settingsRef="ivy.${ant.project.name}" log="quiet"/>
        <ivy:retrieve conf="client" pattern="${target.dir}/client-libs/[artifact]-[revision].[ext]" sync="true" log="quiet" settingsRef="ivy.${ant.project.name}"/>
    </target>

    <target name="tools-dist" depends="tools-build,release-zip" description="Copied artifacts to tools/target" unless="skip.compile">
        <unjar src="${target.dir}/${ivy.module}.jar" dest="${tools.classes}">
            <patternset>
                <exclude name="META-INF/**"/><!-- breaks jarsigner -->
            </patternset>
        </unjar>
    </target>

    <target name="tools-clean" depends="clean"/>

    <target name="headers" description="Run checkstyle header check " depends="load-findbugs">
        <do-checkstyle config="${omero.home}/docs/styles/headers.xml" toFile="${target.dir}/headers.xml" failOnViolation="true">
            <fileset dir="${basedir}">
                <exclude name="**/BareBonesBrowserLaunch.java"/><!-- see lib/licenses/README -->
                <exclude name="**/ETable.java"/><!-- see lib/licenses/README -->
                <include name="**/*"/>
            </fileset>
        </do-checkstyle>
    </target>

</project>
