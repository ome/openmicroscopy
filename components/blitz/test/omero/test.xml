<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2007 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore, josh at glencoesoftware.com
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!-- Stub configuration for OMERO.blitz.test -->

<beans default-lazy-init="false">

  <!-- bean must exist for sec-primitives.xml -->
  <bean id="dbPatchCheck" class="java.lang.Object"/>

 <bean id="uuid_object" class="java.util.UUID" factory-method="randomUUID"/>
 <bean id="uuid" factory-bean="uuid_object" factory-method="toString"/>

 <bean id="roles" class="ome.system.Roles"/>

 <bean id="mockDeclarer" class="ome.services.blitz.test.mock.MockDeclarer">
   <constructor-arg>
     <map>
       <entry key="ome.api.IAdmin" value="ome.api.local.LocalAdmin"/>
       <entry key="ome.api.IConfig"><null/></entry>
       <entry key="ome.api.IDelete"><null/></entry>
       <entry key="ome.api.ILdap"><null/></entry>
       <entry key="ome.api.IPixels"><null/></entry>
       <entry key="ome.api.IContainer"><null/></entry>
       <entry key="ome.api.IQuery" value="ome.api.local.LocalQuery"/>
       <entry key="ome.api.IRenderingSettings"><null/></entry>
       <entry key="ome.api.IRepositoryInfo"><null/></entry>
       <entry key="ome.api.ISession"><null/></entry>
       <entry key="ome.api.IShare"><null/></entry>
       <entry key="ome.api.ITypes"><null/></entry>
       <entry key="ome.api.IUpdate" value="ome.api.local.LocalUpdate"/>
       <!-- Stateful -->
       <entry key="ome.api.JobHandle"><list><value>ome.api.JobHandle</value></list></entry>
       <entry key="ome.api.RawFileStore"><list><value>ome.api.RawFileStore</value></list></entry>
       <entry key="ome.api.RawPixelsStore"><list><value>ome.api.RawPixelsStore</value></list></entry>
       <entry key="omeis.providers.re.RenderingEngine"><list><value>omeis.providers.re.RenderingEngine</value></list></entry>
       <entry key="ome.api.Search"><list><value>ome.api.Search</value></list></entry>
       <entry key="ome.api.ThumbnailStore"><list><value>ome.api.ThumbnailStore</value></list></entry>
       <!-- Blitz only
       <entry key="ome.api.Gateway" value=""/>
       <entry key="ome.api.IScript" value=""/>
       -->
     </map>
   </constructor-arg>
 </bean>

  <!--  from components/server/resources/ome/services/service-ome.io.nio.PixelsService.xml -->
  <bean id="configuredTileSizes" class="ome.io.nio.ConfiguredTileSizes">
    <constructor-arg index="0" value="${omero.pixeldata.tile_width}"/>
    <constructor-arg index="1" value="${omero.pixeldata.tile_height}"/>
    <constructor-arg index="2" value="${omero.pixeldata.max_plane_width}"/>
    <constructor-arg index="3" value="${omero.pixeldata.max_plane_height}"/>
  </bean>

  <bean id="threadPool" class="ome.services.scheduler.ThreadPool">
    <constructor-arg index="0" value="0"/>
    <constructor-arg index="1" value="4"/>
    <constructor-arg index="2" value="5000"/>
  </bean>

  <bean name="/OMERO/Pixels" class="ome.io.nio.PixelsService"
        parent="filesystem">
  </bean>
 <bean id="shareStore" class="ome.services.sharing.BlobShareStore"/>

 <bean id="securitySystem" factory-bean="securityMock" factory-method="proxy"/>
 <bean id="methodSecurity" factory-bean="methodMock" factory-method="proxy"/>
  <bean id="executor"      factory-bean="executorMock" factory-method="proxy"/>
 <!-- Here it is necessary to specify the HardWiredInterceptors instances
 even if they are *not* specified in Spring -->
 <bean id="securityWiring" class="ome.security.basic.BasicSecurityWiring">
   <property name="principalHolder" ref="principalHolder"/>
   <property name="methodSecurity"  ref="methodSecurity"/>
 </bean>

 <bean id="securityMock" class="org.jmock.Mock">
   <constructor-arg value="ome.security.SecuritySystem" type="java.lang.Class"/>
 </bean>

 <bean id="methodMock" class="org.jmock.Mock">
   <constructor-arg value="ome.security.MethodSecurity" type="java.lang.Class"/>
 </bean>

 <bean id="sqlActionMock" class="org.jmock.Mock">
   <constructor-arg value="ome.util.SqlAction" type="java.lang.Class"/>
 </bean>

 <bean id="simpleSqlAction" factory-bean="sqlActionMock" factory-method="proxy"/>

  <bean id="executorMock" class="ome.services.blitz.test.fixtures.ExecutorMockFactory"/>

  <bean id="cacheManager" class="ome.tools.spring.ShutdownSafeEhcacheManagerFactoryBean"/>

  <bean name="sessionCache" class="ome.services.sessions.state.SessionCache">
    <property name="cacheManager"  ref="cacheManager"/>
    <property name="updateInterval" value="1800000"/><!-- ms -->
  </bean>

  <bean id="principalHolder" class="ome.security.basic.CurrentDetails"/>
  <alias alias="currentDetails" name="principalHolder"/>

  <!-- ome.services.sessions.SessionManager with swappable implementation -->

  <bean id="emMock" class="org.jmock.Mock">
      <constructor-arg value="ome.tools.hibernate.ExtendedMetadata" type="java.lang.Class"/>
  </bean>

  <bean id="extendedMetadata" factory-bean="emMock" factory-method="proxy"/>

  <bean id="sessionsMock" class="org.jmock.Mock">
      <constructor-arg value="ome.services.sessions.SessionManager" type="java.lang.Class"/>
  </bean>

  <bean id="mockedSessionManager" factory-bean="sessionsMock" factory-method="proxy"/>

  <bean id="swappableSessionManagerSource"
      class="org.springframework.aop.target.HotSwappableTargetSource">
      <constructor-arg ref="mockedSessionManager"/>
  </bean>

  <bean id="sessionManager" class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="targetSource" ref="swappableSessionManagerSource"/>
  </bean>

  <bean id="ring" class="ome.services.blitz.fire.Ring">
    <constructor-arg ref="uuid"/>
    <constructor-arg ref="executor"/>
  </bean>

  <!--  TODO: it might be better to refactor all IO into one module -->
  <bean name="filesystem"  abstract="true">
    <constructor-arg value="${omero.data.dir}"/>
  </bean>

  <bean id="sfMock" class="ome.services.blitz.test.fixtures.SessionFactoryMockFactory"/>
  <bean id="sessionFactory" factory-bean="sfMock" factory-method="proxy"/>

  <!-- TODO: passing null for the moment. Will need to use a mock eventually -->
  <bean id="omeroSessionFactory" class="ome.tools.hibernate.SessionFactory">
    <constructor-arg index="0" ref="sessionFactory"/>
    <constructor-arg index="1"><null/></constructor-arg>
  </bean>

  <!-- For the request factories -->
  <bean id="Ice.Communicator" factory-method="initialize" class="Ice.Util"/>

  <bean id="registryMock" class="org.jmock.Mock">
      <constructor-arg value="ome.services.blitz.fire.Registry" type="java.lang.Class"/>
  </bean>

  <bean id="Registry" factory-bean="registryMock" factory-method="proxy"/>

  <bean id="repositoryDaoMock" class="org.jmock.Mock">
      <constructor-arg value="ome.services.blitz.repo.RepositoryDao" type="java.lang.Class"/>
  </bean>

  <bean id="repositoryDao" factory-bean="repositoryDaoMock" factory-method="proxy"/>

</beans>
