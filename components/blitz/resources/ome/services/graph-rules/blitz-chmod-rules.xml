<?xml version="1.0" encoding="UTF-8"?>

<!--
#
# Copyright (C) 2015-2017 University of Dundee & Open Microscopy Environment.
# All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <util:list id="chmodTargets" value-type="java.lang.String">

        <!-- core -->
        <value>ExperimenterGroup</value>

    </util:list>

    <util:list id="chmodRules" value-type="ome.services.graphs.GraphPolicyRule">

        <!-- see blitz-graph-rules.xml for rule syntax -->

        <!-- Note that these rules apply only for downgrading a group to private. -->

        <!-- ACQUISITION -->

        <!-- Consider all settings in the group. -->

        <bean parent="graphPolicyRule" p:matches="S:DetectorSettings[E].details.group = [I]" p:changes="S:[-]"/>
        <bean parent="graphPolicyRule" p:matches="S:LightSettings[E].details.group = [I]" p:changes="S:[-]"/>
        <bean parent="graphPolicyRule" p:matches="S:ObjectiveSettings[E].details.group = [I]" p:changes="S:[-]"/>

        <!-- Delete cross-owner links regardless of permissions. -->

        <bean parent="graphPolicyRule" p:matches="L:FilterSetEmissionFilterLink[E].parent = FS:[E], L.child = EF:[E], FS =/!o EF"
                                       p:changes="L:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="L:FilterSetExcitationFilterLink[E].parent = FS:[E], L.child = EF:[E], FS =/!o EF"
                                       p:changes="L:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="L:LightPathEmissionFilterLink[E].parent = LP:[E], L.child = EF:[E], LP =/!o EF"
                                       p:changes="L:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="L:LightPathExcitationFilterLink[E].parent = LP:[E], L.child = EF:[E], LP =/!o EF"
                                       p:changes="L:[D]/n"/>

        <!-- Delete cross-owner settings regardless of permissions. -->

        <bean parent="graphPolicyRule" p:matches="LogicalChannel[E].detectorSettings =/!o S:[E]" p:changes="S:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="LogicalChannel[E].lightSourceSettings =/!o S:[E]" p:changes="S:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="Image[E].objectiveSettings =/!o S:[E]" p:changes="S:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="S:DetectorSettings[E].detector =/!o [E]" p:changes="S:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="S:LightSettings[E].lightSource =/!o [E]" p:changes="S:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="S:ObjectiveSettings[E].objective =/!o [E]" p:changes="S:[D]/n"/>

        <!-- Cannot downgrade if images have cross-owner subgraphs. -->

        <bean parent="graphPolicyRule" p:matches="I:Image[E].imagingEnvironment =/!o IE:[E]"
                                       p:error="cannot downgrade to private as {I} uses differently owned {IE}"/>

        <bean parent="graphPolicyRule" p:matches="I:Image[E].instrument =/!o IN:[E]"
                                       p:error="cannot downgrade to private as {I} uses differently owned {IN}"/>

        <!-- ANNOTATIONS -->

        <!-- Delete cross-owner links regardless of permissions. -->

        <bean parent="graphPolicyRule" p:matches="L:IAnnotationLink[E].parent = X:[E], L.child = A:[E], X =/!o A"
                                       p:changes="L:[D]/n"/>

        <!-- If a basic or comment annotation is unlinked then consider it for deletion regardless of permissions. -->

        <bean parent="graphPolicyRule" p:matches="IAnnotationLink[D].child = A:BasicAnnotation[E]{i}" p:changes="A:{r}"/>
        <bean parent="graphPolicyRule" p:matches="IAnnotationLink[D].child = A:CommentAnnotation[E]{i}" p:changes="A:{r}"/>

        <!-- If a list, map, or XML annotation is unlinked then consider it for deletion. -->

        <bean parent="graphPolicyRule" p:matches="IAnnotationLink[D].child = A:ListAnnotation[E]{i}/d" p:changes="A:{r}"/>
        <bean parent="graphPolicyRule" p:matches="IAnnotationLink[D].child = A:MapAnnotation[E]{i}/d" p:changes="A:{r}"/>
        <bean parent="graphPolicyRule" p:matches="IAnnotationLink[D].child = A:XmlAnnotation[E]{i}/d"  p:changes="A:{r}"/>

        <!-- In considering deleting an annotation then do not delete the annotation if it remains linked. -->

        <bean parent="graphPolicyRule" p:matches="L:IAnnotationLink[E].parent = [E]{ia}, L.child = A:Annotation[E]{r}"
                                       p:changes="A:{a}"/>

        <!-- Delete orphaned annotations, ignoring permissions for BasicAnnotation and CommentAnnotation. -->

        <bean parent="graphPolicyRule" p:matches="A:Annotation[E]{o}/d" p:changes="A:[D]"/>
        <bean parent="graphPolicyRule" p:matches="A:BasicAnnotation[E]{o}" p:changes="A:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="A:CommentAnnotation[E]{o}" p:changes="A:[D]/n"/>

        <!-- If an annotation link's parent or child is deleted then delete the link regardless of permissions. -->

        <bean parent="graphPolicyRule" p:matches="L:IAnnotationLink[E].parent = [D]" p:changes="L:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="L:IAnnotationLink[E].child = [D]" p:changes="L:[D]/n"/>

        <!-- CONTAINERS -->

        <!-- Delete cross-owner links regardless of permissions. -->

        <bean parent="graphPolicyRule" p:matches="L:ProjectDatasetLink[E].parent = P:[E], L.child = D:[E], P =/!o D"
                                       p:changes="L:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="L:DatasetImageLink[E].parent = D:[E], L.child = I:[E], D =/!o I"
                                       p:changes="L:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="L:FolderImageLink[E].parent = F:[E], L.child = I:[E], F =/!o I"
                                       p:changes="L:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="L:FolderRoiLink[E].parent = F:[E], L.child = ROI:[E], F =/!o ROI"
                                       p:changes="L:[D]/n"/>

        <!-- CORE -->

        <!-- Consider every link in the group. -->

        <bean parent="graphPolicyRule" p:matches="L:ILink[E].details.group = [I]" p:changes="L:[-]"/>

        <!-- Consider every image, pixels and channel in the group. -->

        <bean parent="graphPolicyRule" p:matches="I:Image[E].details.group = [I]" p:changes="I:[-]"/>
        <bean parent="graphPolicyRule" p:matches="P:Pixels[E].details.group = [I]" p:changes="P:[-]"/>
        <bean parent="graphPolicyRule" p:matches="C:Channel[E].details.group = [I]" p:changes="C:[-]"/>

        <!-- Do not delete an original file that is being used by an object. -->

        <bean parent="graphPolicyRule" p:matches="FileAnnotation.file = OF:[E]{r}" p:changes="OF:{a}"/>
        <bean parent="graphPolicyRule" p:matches="FilesetEntry.originalFile = OF:[E]{r}" p:changes="OF:{a}"/>
        <bean parent="graphPolicyRule" p:matches="Roi[E].source = OF:[E]{r}" p:changes="OF:{a}"/>
        <bean parent="graphPolicyRule" p:matches="L:JobOriginalFileLink[E].parent = [E], L.child = OF:[E]{r}" p:changes="OF:{a}"/>
        <bean parent="graphPolicyRule" p:matches="L:PixelsOriginalFileMap[E].child = [E], L.parent = OF:[E]{r}" p:changes="OF:{a}"/>

        <!-- If an original file is orphaned then delete it. -->

        <bean parent="graphPolicyRule" p:matches="OF:OriginalFile[E]{o}" p:changes="OF:[D]"/>

        <!-- Cannot downgrade to a private group if the image has a differently owned stage label. -->

        <bean parent="graphPolicyRule" p:matches="Image[E].stageLabel =/!o SL:[E]"
                                       p:error="cannot downgrade to private as {E} uses differently owned {SL}"/>

        <!-- Cannot downgrade to a private group if the logical channels are owned differently from their channels. -->

        <bean parent="graphPolicyRule" p:matches="LC:LogicalChannel[E].channels =/!o C:[E]"
                                       p:error="cannot downgrade to private as {LC} is for differently owned {C}"/>

        <!-- DISPLAY -->

        <!-- Regardless of permissions delete others' rendering settings and thumbnails. -->

        <bean parent="graphPolicyRule" p:matches="Pixels[E].settings =/!o RD:[E]" p:changes="RD:[D]/n"/>
        <bean parent="graphPolicyRule" p:matches="Pixels[E].thumbnails =/!o T:[E]" p:changes="T:[D]/n"/>

        <!-- If rendering settings are deleted then delete the subgraph below. -->

        <bean parent="graphPolicyRule" p:matches="RenderingDef[D].projections = PD:[E]" p:changes="PD:[D]"/>
        <bean parent="graphPolicyRule" p:matches="RenderingDef[D].quantization = Q:[E]" p:changes="Q:[D]"/>
        <bean parent="graphPolicyRule" p:matches="RenderingDef[D].waveRendering = CB:[E]" p:changes="CB:[D]"/>
        <bean parent="graphPolicyRule" p:matches="ChannelBinding[D].spatialDomainEnhancement = SDE:[E]" p:changes="SDE:[D]"/>

        <!-- EXPERIMENT -->

        <!-- Cannot downgrade if image is associated with differently owned experiment. -->

        <bean parent="graphPolicyRule" p:matches="I:Image[E].experiment =/!o E:[E]"
                                       p:error="cannot downgrade to private as {E} uses differently owned {I}"/>

        <!-- JOB -->

        <!-- Cannot downgrade to a private group if jobs have differently owned original files. -->

        <bean parent="graphPolicyRule" p:matches="L:JobOriginalFileLink[E].parent = J:[E], L.child = OF:[E];group=!user, J =/!o OF"
                                       p:error="cannot downgrade to private as {J} has differently owned {OF}"/>

        <!-- META -->

        <!-- If an object is deleted then also delete or move its external info regardless of permissions. -->

        <bean parent="graphPolicyRule" p:matches="[D].details.externalInfo = EI:[E]" p:changes="EI:[D]/n"/>

        <!-- ROI -->

        <!-- Regardless of permissions delete others' ROIs. -->

        <bean parent="graphPolicyRule" p:matches="Image[E].rois =/!o ROI:[E]" p:changes="ROI:[D]/n"/>

        <!-- Consider deleting an original file if it is unlinked from a ROI. -->

        <bean parent="graphPolicyRule" p:matches="Roi[D].source = OF:[E]{i}" p:changes="OF:{r}"/>

        <!-- Delete the shapes of deleted ROIs. -->

        <bean parent="graphPolicyRule" p:matches="Roi[D].shapes = S:[E]" p:changes="S:[D]"/>

        <!-- Delete orphaned affine transforms. -->

        <bean parent="graphPolicyRule" p:matches="Shape[D].transform = T:[E]{i}" p:changes="T:[E]{r}"/>
        <bean parent="graphPolicyRule" p:matches="Shape[E].transform = T:[E]{r}" p:changes="T:[E]{a}"/>
        <bean parent="graphPolicyRule" p:matches="T:AffineTransform[E]{o}" p:changes="T:[D]"/>

        <!-- SCREEN -->

        <!-- Consider every screen in the group. -->

        <bean parent="graphPolicyRule" p:matches="S:Screen[E].details.group = [I]" p:changes="S:[-]"/>

        <!-- Cannot downgrade to a private group if the image has a differently owned field. -->

        <bean parent="graphPolicyRule" p:matches="WS:WellSample.image =/!o I:[E]"
                                       p:error="cannot downgrade to private as {WS} uses differently owned {I}"/>

        <!-- Cannot downgrade to a private group if wells have differently owned reagents. -->

        <bean parent="graphPolicyRule" p:matches="L:WellReagentLink[E].parent = W:[E], L.child = R:[E], W =/!o R"
                                       p:error="cannot downgrade to private as {W} has differently owned {R}"/>

        <!-- Cannot downgrade to a private group if screen has differently owned reagents. -->

        <bean parent="graphPolicyRule" p:matches="S:Screen[E].reagents =/!o R:Reagent"
                                       p:error="cannot downgrade to private as {S} has differently owned {R}"/>

        <!-- Delete cross-owner links regardless of permissions. -->

        <bean parent="graphPolicyRule" p:matches="L:ScreenPlateLink[E].parent = S:[E], L.child = P:[E], S =/!o P"
                                       p:changes="L:[D]/n"/>

        <!-- STATS -->

        <!-- Delete cross-owner statistics. -->

        <bean parent="graphPolicyRule" p:matches="Channel[E].statsInfo =/!o SI:[E]" p:changes="SI:[D]"/>

    </util:list>

</beans>
