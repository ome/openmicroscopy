<?xml version = "1.0" encoding = "UTF-8"?>
<?xml-stylesheet href="http://cvs.openmicroscopy.org.uk/snapshots/omero/editor/omeXsd/display.xsl" type="text/xsl"?>
<!--
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    #
    # Copyright (C) 2003-2012 Open Microscopy Environment
    #       Massachusetts Institute of Technology,
    #       National Institutes of Health,
    #       University of Dundee,
    #       University of Wisconsin at Madison
    #
    # This work is licensed under the
    #       Creative Commons Attribution 3.0 Unported License.
    # To view a copy of this license, visit
    #       http://creativecommons.org/licenses/by/3.0/
    # or send a letter to
    #       Creative Commons, 444 Castro Street, Suite 900,
    #       Mountain View, California, 94041, USA.
    # For attribution instructions, visit
    #       http://www.openmicroscopy.org/info/attribution
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<!--
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	# Written by:  Andrew J Patterson 
	#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<xsd:schema xmlns = "http://www.openmicroscopy.org/Schemas/OMERO/2012-06"
	targetNamespace = "http://www.openmicroscopy.org/Schemas/OMERO/2012-06"
	xmlns:OME = "http://www.openmicroscopy.org/Schemas/OME/2012-06"
	xmlns:BIN="http://www.openmicroscopy.org/Schemas/BinaryFile/2012-06"
	xmlns:SA = "http://www.openmicroscopy.org/Schemas/SA/2012-06"
	xmlns:xsd = "http://www.w3.org/2001/XMLSchema"
	version = "1"
	elementFormDefault = "qualified">
	<!-- Using the svn location for import
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/OME/2012-06" schemaLocation="http://git.openmicroscopy.org/src/develop/components/specification/InProgress/ome.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/BinaryFile/2012-06" schemaLocation="http://git.openmicroscopy.org/src/develop/components/specification/InProgress/BinaryFile.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/SA/2012-06" schemaLocation="http://git.openmicroscopy.org/src/develop/components/specification/InProgress/SA.xsd"/>

	Using the local directory location for import -->
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/OME/2012-06" schemaLocation="ome.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/BinaryFile/2012-06" schemaLocation="BinaryFile.xsd"/>
	<xsd:import namespace="http://www.openmicroscopy.org/Schemas/SA/2012-06" schemaLocation="SA.xsd"/>
	<!-- -->

	<xsd:element name="OriginalFile"><!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>OriginalFiles</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a original file.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="ID" use="required" type="OriginalFileID"/>
			<xsd:attribute name="Path" use="required" type="xsd:string"/>
			<xsd:attribute name="Size" use="required" type="OME:NonNegativeLong"/>
			<xsd:attribute name="Atime" use="optional" type="xsd:dateTime"/>
			<xsd:attribute name="Mtime" use="optional" type="xsd:dateTime"/>
			<xsd:attribute name="Ctime" use="optional" type="xsd:dateTime"/>
			<xsd:attribute name="SHA1" use="required" type="xsd:string"/>
			<xsd:attribute name="MimeType" use="optional" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "Session"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Sessions</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a session.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="SA:AnnotationRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><manytomany/></xsdfu></xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="NodeRef" minOccurs="1" maxOccurs="1">
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="OME:Reference">
								<xsd:attribute name="ID" use="required" type="NodeID"/>
							</xsd:extension>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Share">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><plural>Share</plural></xsdfu></xsd:appinfo>
						<xsd:documentation> This . </xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Group" minOccurs="0" maxOccurs="1"
								type="OME:ExperimenterGroupID"/>
							<xsd:element name="ShareMember" minOccurs="0" maxOccurs="1"
								type="OME:ExperimenterID"/>
							<xsd:element ref="BIN:BinData" minOccurs="1" maxOccurs="unbounded"/>
						</xsd:sequence>
						<xsd:attribute name="ItemCount" use="optional" type="xsd:long"/>
						<xsd:attribute name="Active" use="optional" type="xsd:boolean"/>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Event" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:appinfo><xsdfu><plural>Events</plural><immutable/></xsdfu></xsd:appinfo>
						<xsd:documentation>Describes an Event.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="OME:ExperimenterRef" minOccurs="1" maxOccurs="1"/>
							<xsd:element ref="OME:ExperimenterGroupRef" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="EventRef" minOccurs="0" maxOccurs="1">
								<xsd:complexType>
									<xsd:complexContent>
										<xsd:extension base="OME:Reference">
											<xsd:attribute name="ID" use="required" type="EventID"/>
										</xsd:extension>
									</xsd:complexContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="EventLog" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:appinfo><xsdfu><plural>EventLogs</plural><immutable/></xsdfu></xsd:appinfo>
									<xsd:documentation>Describes an EventLog.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:attribute name="EntityId" use="required"
										type="OME:NonNegativeLong"/>
									<xsd:attribute name="EntityType" use="required"
										type="xsd:string"/>
									<xsd:attribute name="Action" use="required" type="xsd:string"/>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="ID" use="required" type="EventID"/>
						<xsd:attribute name="EntityId" use="required" type="OME:NonNegativeLong"/>
						<xsd:attribute name="Status" use="optional" type="xsd:string"/>
						<xsd:attribute name="Time" use="required" type="xsd:dateTime"/>
						<xsd:attribute name="Type" use="required" type="EventType"/>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="OME:ExperimenterRef" minOccurs="1" maxOccurs="1"/>
			</xsd:sequence>
			<xsd:attribute name="Uuid" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo><xsdfu><unique/></xsdfu></xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="DefaultEventType" use="required" type="EventType"/>
			<xsd:attribute name="UserAgent" use="optional" type="xsd:string"/>
			<xsd:attribute name="TimeToIdle" use="required" type="OME:NonNegativeLong"/>
			<xsd:attribute name="TimeToLive" use="required" type="OME:NonNegativeLong"/>
			<xsd:attribute name="Started" use="required" type="xsd:dateTime"/>
			<xsd:attribute name="Closed" use="optional" type="xsd:dateTime"/>
			<xsd:attribute name="Message" use="optional" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "Node"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Nodes</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a node.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Uuid" use="required" type="OME:UniversallyUniqueIdentifier">
				<xsd:annotation>
					<xsd:appinfo><xsdfu><unique/></xsdfu></xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Conn" use="required" type="xsd:string"/>
			<xsd:attribute name="Up" use="required" type="xsd:dateTime"/>
			<xsd:attribute name="Down" use="optional" type="xsd:dateTime"/>
			<xsd:attribute name="Scale" use="optional" type="xsd:long"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "ExternalInfo"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>ExternalInfo</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes external info.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="EntityID" use="required" type="xsd:long"/>
			<xsd:attribute name="EntityType" use="required" type="xsd:string"/>
			<xsd:attribute name="UUID" use="optional" type="OME:UniversallyUniqueIdentifier"/>
			<xsd:attribute name="LSID" use="optional" type="OME:LSID"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "DBPatch"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>DBPatchs</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a database patch</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="CurrentVersion" use="required" type="xsd:string"/>
			<xsd:attribute name="CurrentPatch" use="required" type="xsd:long"/>
			<xsd:attribute name="PreviousVersion" use="required" type="xsd:string"/>
			<xsd:attribute name="PreviousPatch" use="required" type="xsd:long"/>
			<xsd:attribute name="Finished" use="optional" type="xsd:dateTime"/>
			<xsd:attribute name="Message" use="optional" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "Namespace"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Namespaces</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a namespace</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" minOccurs="0" maxOccurs="1">
					<xsd:annotation>
						<xsd:documentation>
							A description for the namespace. [plane text multi-line string]
						</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:whiteSpace value="preserve"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Name" use="optional" type="xsd:string"/>
			<xsd:attribute name="Keywords" use="optional" type="StringArray"/>
			<xsd:attribute name="Multivalued" use="optional" type="xsd:boolean"/>
			<xsd:attribute name="Display" use="optional" type="xsd:boolean"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "Thumbnail"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Thumbnails</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a Thumbnail</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="PixelsRef" minOccurs="1" maxOccurs="1" type="OME:PixelsID"/>
			</xsd:sequence>
			<xsd:attribute name="MimeType" use="required" type="xsd:string"/>
			<xsd:attribute name="SizeX" use="required" type="OME:NonNegativeInt"/>
			<xsd:attribute name="SizeY" use="required" type="OME:NonNegativeInt"/>
			<xsd:attribute name="Ref" use="optional" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "RenderingDef"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>RenderingDefs</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a RenderingDef</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="PixelsRef" minOccurs="1" maxOccurs="unbounded" type="OME:PixelsID"/>
				<xsd:element name="Model" minOccurs="1" maxOccurs="1" type="RenderingModel"/>
				<xsd:element name="Quantization" minOccurs="1" maxOccurs="1" type="QuantumDef"/>
				<xsd:element name="WaveRendering" minOccurs="1" maxOccurs="unbounded" type="ChannelBinding"/>
				<xsd:element name="SpatialDomainEnhancement" minOccurs="0" maxOccurs="unbounded" type="CodomainMapContext"/>
			</xsd:sequence>
			<xsd:attribute name="DefaultZ" use="required" type="OME:NonNegativeInt"/>
			<xsd:attribute name="DefaultT" use="required" type="OME:NonNegativeInt"/>
			<xsd:attribute name="Name" use="optional" type="xsd:string"/>
			<xsd:attribute name="Compression" use="optional" type="xsd:double"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "ReverseIntensityContext"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>ReverseIntensityContexts</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a ReverseIntensityContext</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Reverse" use="required" type="xsd:boolean"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "PlaneSlicingContext"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>PlaneSlicingContexts</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a PlaneSlicingContext</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="UpperLimit" use="required" type="xsd:long"/>
			<xsd:attribute name="LowerLimit" use="required" type="xsd:long"/>
			<xsd:attribute name="PlaneSelected" use="required" type="xsd:long"/>
			<xsd:attribute name="PlanePrevious" use="required" type="xsd:long"/>
			<xsd:attribute name="Constant" use="required" type="xsd:boolean"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "ContrastStretchingContext"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>ContrastStretchingContexts</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a ContrastStretchingContext</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="XStart" use="required" type="xsd:long"/>
			<xsd:attribute name="YStart" use="required" type="xsd:long"/>
			<xsd:attribute name="XEnd" use="required" type="xsd:long"/>
			<xsd:attribute name="YEnd" use="required" type="xsd:long"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "StatsInfo"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>StatsInfos</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a StatsInfo</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="GlobalMin" use="required" type="xsd:double"/>
			<xsd:attribute name="GlobalMax" use="required" type="xsd:double"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "ImportJob"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>ImportJobs</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a ImportJob</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="ImageName" use="required" type="xsd:string"/>
			<xsd:attribute name="ImageDescription" use="required" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "ScriptJob"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>ScriptJobs</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a ScriptJob</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Description" use="required" type="xsd:string"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "ParseJob"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>ParseJobs</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a ParseJob</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="BIN:BinData" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name = "Job"> <!-- top level definition -->
		<xsd:annotation>
			<xsd:appinfo><xsdfu><plural>Jobs</plural></xsdfu></xsd:appinfo>
			<xsd:documentation>Describes a Job</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="OriginalFileRef" minOccurs="0" maxOccurs="unbounded" type="OriginalFileID"/>
			</xsd:sequence>
			<xsd:attribute name="Username" use="required" type="xsd:string"/>
			<xsd:attribute name="Groupname" use="required" type="xsd:string"/>
			<xsd:attribute name="Type" use="required" type="xsd:string"/>
			<xsd:attribute name="Message" use="required" type="xsd:string"/>
			<xsd:attribute name="Status" use="required" type="JobStatus"/>
			<xsd:attribute name="Submitted" use="required" type="xsd:dateTime"/>
			<xsd:attribute name="ScheduledFor" use="required" type="xsd:dateTime"/>
			<xsd:attribute name="Started" use="optional" type="xsd:dateTime"/>
			<xsd:attribute name="Finished" use="optional" type="xsd:dateTime"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="QuantumDef">
		<xsd:attribute name="CDStart" use="required" type="xsd:long"/>
		<xsd:attribute name="CDEnd" use="required" type="xsd:long"/>
		<xsd:attribute name="BitResolution" use="required" type="xsd:long"/>
	</xsd:complexType>

	<xsd:complexType name="ChannelBinding">
		<xsd:attribute name="Family" use="required" type="Family"/>
		<xsd:attribute name="Coefficient" use="required" type="xsd:double"/>
		<xsd:attribute name="InputStart" use="required" type="xsd:double"/>
		<xsd:attribute name="InputEnd" use="required" type="xsd:double"/>
		<xsd:attribute name="Active" use="required" type="xsd:boolean"/>
		<xsd:attribute name="NoiseReduction" use="required" type="xsd:boolean"/>
		<xsd:attribute name="Color" use="required" type="OME:Color"/>
	</xsd:complexType>

	<xsd:complexType name="CodomainMapContext">
		<!-- This needs some reference back to RenderingDef -->
	</xsd:complexType>

	<xsd:simpleType name="RenderingModel">
		<xsd:annotation>
			<xsd:documentation>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value = "RGB"/>
			<xsd:enumeration value = "Greyscale"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="Family">
		<xsd:annotation>
			<xsd:documentation>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value = "Linear"/>
			<xsd:enumeration value = "Polynomial"/>
			<xsd:enumeration value = "Exponential"/>
			<xsd:enumeration value = "Logarithmic"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="JobStatus">
		<xsd:annotation>
			<xsd:documentation>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value = "Submitted"/>
			<xsd:enumeration value = "Resubmitted"/>
			<xsd:enumeration value = "Queued"/>
			<xsd:enumeration value = "Requeued"/>
			<xsd:enumeration value = "Running"/>
			<xsd:enumeration value = "Error"/>
			<xsd:enumeration value = "Waiting"/>
			<xsd:enumeration value = "Finished"/>
			<xsd:enumeration value = "Cancelled"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="StringArray">
		<xsd:annotation>
			<xsd:documentation>
				A simple type that identifies a collection of strings. It is recognised by xsd-fu.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="EventType">
		<xsd:annotation>
			<xsd:documentation>
				Types of events in the event log
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value = "Import"/>
			<xsd:enumeration value = "Internal"/>
			<xsd:enumeration value = "Shoola"/>
			<xsd:enumeration value = "User"/>
			<xsd:enumeration value = "Task"/>
			<xsd:enumeration value = "Test"/>
			<xsd:enumeration value = "Processing"/>
			<xsd:enumeration value = "FullText"/>
			<xsd:enumeration value = "Sessions"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="EventID">
		<xsd:restriction base="OME:LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Event:\S+)|(Event:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="SessionID">
		<xsd:restriction base="OME:LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Session:\S+)|(Session:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="NodeID">
		<xsd:restriction base="OME:LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Node:\S+)|(Node:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="OriginalFileID">
		<xsd:restriction base="OME:LSID">
			<xsd:pattern value="(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:OriginalFile:\S+)|(OriginalFile:\S+)"/>
		</xsd:restriction>
	</xsd:simpleType>

</xsd:schema>
