<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Copyright 2011 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore, josh at glencoesoftware.com
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<beans>
  <description>
  Registers the cron job for background pixeldata handling.
  </description>

  <bean id="dbUserCheck"
     class="ome.services.util.DBUserCheck" lazy-init="false">
     <constructor-arg ref="simpleSqlAction"/>
     <constructor-arg ref="preferenceContext"/>
     <constructor-arg ref="readOnlyStatus"/>
  </bean>

  <bean id="jvmSettingsCheck"
     class="ome.services.util.JvmSettingsCheck"
     lazy-init="false">
  </bean>

  <bean id="adapterName" class="java.lang.String">
    <constructor-arg value="PixelDataAdapter"/>
  </bean>

  <bean id="pixelDataTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="pixelDataThreadRun" />
    <property name="cronExpression" value="${omero.pixeldata.cron}" />
  </bean>

  <bean id="pixelDataTriggerGuard" class="ome.services.util.BeanInstantiationGuard" depends-on="executor">
    <constructor-arg ref="readOnlyStatus"/>
    <constructor-arg value="pixelDataTrigger"/>
    <property name="isWriteDb" value="true"/>
    <property name="isWriteRepo" value="true"/>
  </bean>

  <!-- used by session factory -->
  <bean id="org.hibernate.EmptyInterceptor.INSTANCE"
    class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean"/>
  <alias name="org.hibernate.EmptyInterceptor.INSTANCE" alias="omeroInterceptor"/>

  <bean id="oneGroupSecurityFilter" class="ome.security.basic.OneGroupSecurityFilter">
    <property name="defaultFilterCondition" value="true"/>
  </bean>

  <bean id="allGroupSecurityFilter" class="ome.security.basic.AllGroupsSecurityFilter">
    <constructor-arg ref="simpleSqlAction"/>
    <constructor-arg ref="roles"/>
    <property name="defaultFilterCondition" value="true"/>
  </bean>

  <bean id="sharingSecurityFilter" class="ome.security.basic.SharingSecurityFilter">
    <constructor-arg ref="roles"/>
    <constructor-arg ref="shareStore"/>
    <property name="defaultFilterCondition" value="true"/>
  </bean>

  <bean id="lightAdminPrivilegesSecurityFilter" class="ome.security.basic.LightAdminPrivilegesSecurityFilter">
    <constructor-arg ref="roles"/>
    <property name="defaultFilterCondition" value="true"/>
  </bean>

  <bean id="eventListeners" class="ome.security.basic.EventListenersFactoryBean">
    <constructor-arg ref="currentDetails"/>
    <constructor-arg ref="tokenHolder"/>
    <constructor-arg index="2"><null/></constructor-arg>
    <constructor-arg index="3"><null/></constructor-arg>
    <property name="debugAll" value="false"/>
  </bean>

  <alias name="basicSecuritySystem" alias="securitySystem"/>
  <bean id="basicSecuritySystem" class="ome.security.basic.BasicSecuritySystem">
    <constructor-arg><null/></constructor-arg>
    <constructor-arg ref="systemTypes"/>
    <constructor-arg ref="currentDetails"/>
    <constructor-arg ref="sessionManager"/>
    <constructor-arg ref="sessionProvider"/>
    <constructor-arg ref="eventProvider"/>
    <constructor-arg ref="roles"/>
    <constructor-arg ref="internalServiceFactory"/>
    <constructor-arg ref="tokenHolder"/>
    <constructor-arg>
      <list>
        <ref bean="securityFilterHolder"/>
      </list>
    </constructor-arg>
    <constructor-arg><bean class="ome.security.policy.DefaultPolicyService"/></constructor-arg>
    <constructor-arg><null/></constructor-arg>
  </bean>

  <bean id="eventHandler" class="ome.security.basic.NullEventHandler">
    <description>
    Scope: private
    </description>
    <constructor-arg ref="basicSecuritySystem"/>
    <constructor-arg ref="omeroSessionFactory"/>
  </bean>

  <bean id="readOnlyStatus"
      class="ome.services.util.ReadOnlyStatus">
     <constructor-arg value="${omero.cluster.read_only}"/>
     <constructor-arg value="${omero.cluster.read_only.db}"/>
     <constructor-arg value="${omero.cluster.read_only.repo}"/>
     <constructor-arg ref="sqlActionWrapper"/>
     <constructor-arg value="${omero.data.dir}"/>
     <constructor-arg value="${omero.managed.dir}"/>
  </bean>

  <bean id="serverDirectoryCheck"
     class="ome.services.util.ServerDirectoryCheck"
     init-method="run" lazy-init="false">
     <constructor-arg value="${omero.data.dir}"/>
     <constructor-arg value="${omero.managed.dir}"/>
     <constructor-arg ref="readOnlyStatus"/>
  </bean>

  <!-- Workaround for session mgr dependency#5216-->

 <bean id="dbPatchCheck" class="java.lang.Object"/>

  <alias name="${omero.metrics.bean}" alias="metrics"/>

 <bean id="defaultMetrics" class="ome.system.metrics.DefaultMetrics">
    <property name="slf4jMinutes" value="${omero.metrics.slf4j_minutes}"/>
    <property name="beginsWith">
        <list><value>ome.services.pixeldata</value></list>
    </property>
    <property name="graphiteAddress" value="${omero.metrics.graphite}"/>
 </bean>

  <bean id="nullMetrics" class="ome.system.metrics.NullMetrics"/>

</beans>
