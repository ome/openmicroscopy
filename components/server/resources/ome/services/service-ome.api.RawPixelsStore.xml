<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 
# Copyright 2006-2018 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<beans>	

  <bean singleton="false" parent="stateful"
        id="internal-ome.api.RawPixelsStore" 
     class="ome.services.RawPixelsBean">
     <constructor-arg><value>true</value></constructor-arg>
     <constructor-arg value="${omero.data.dir}"/>
    <!--  
      Copied from id="binary" parent (no multiple inheritance). This is needed
      so long there isn't a wrapper instance around the RawPixelsStore as in
      service-omeis.providers.re.RenderingEngine.xml
    -->
    <property name="pixelsMetadata" ref="internal-ome.api.IPixels"/>
    <property name="pixelsData"     ref="/OMERO/Pixels"/>
    <property name="IRepositoryInfo" ref="internal-ome.api.IRepositoryInfo"/>
    <property name="sqlAction" ref="simpleSqlAction"/>
  </bean>

  <bean id="managed-ome.api.RawPixelsStore" parent="managedStatefulService" singleton="false">
    <property name="proxyInterfaces" value="ome.api.RawPixelsStore"/>
    <property name="target" ref="internal-ome.api.RawPixelsStore"/>
  </bean>

  <bean id="internal-ome.api.RawPixelsStoreSubstituter" class="ome.services.util.BeanInstantiationSubstituter">
    <constructor-arg ref="readOnlyStatus"/>
    <constructor-arg value="internal-ome.api.RawPixelsStore"/>
    <constructor-arg value="ome.services.RawPixelsBeanReadOnly"/>
    <property name="isWriteDb" value="true"/>
    <property name="isWriteRepo" value="true"/>
  </bean>

</beans>
