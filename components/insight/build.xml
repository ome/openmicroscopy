<?xml version="1.0" encoding="utf-8"?>
<project name="insight" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2011 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore, josh at glencoesoftware.com
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-->
    <description>
        Build framework for the insight GUI code. The shipped application
        is primarily built through the Eclipse .project and .classpath files,
        but this build is here to allow continuous integration testing.

        Note: this build file calls out to insight's internal build stored under
        insight/build
    </description>

    <!-- Overrides! -->
    <property name="src.dir"         value="${basedir}/SRC" />
    <property name="test.dir"         value="${basedir}/TEST" />

    <property name="import.dir" value="${basedir}/../antlib/resources"/>
    <import file="${import.dir}/global.xml"/>
    <import file="${import.dir}/lifecycle.xml"/>

    <macrodef name="insightBuild">
        <attribute name="target"/>
        <sequential>
            <ant antfile="${basedir}/build/build.xml" inheritAll="false" inheritRefs="false" target="@{target}">
                <property name="dont.run.tests" value="true"/>
            </ant>
        </sequential>
    </macrodef>

    <target name="package" depends="lifecycle.package">
        <!-- Setup test directory for internal build's classpath -->
        <mkdir dir="${target.dir}/libs/test"/>
        <mkdir dir="${target.dir}/libs/runtime"/>
        <ivy:retrieve settingsRef="ivy.${ant.project.name}"
            pattern="${deps.lib.dir}/runtime/[artifact].[ext]"
            conf="client" log="quiet" sync="false" symlink="true"/>
        <insightBuild target="dist"/>
        <antcall target="copy-zips" inheritAll="true" inheritRefs="true"/>
    </target>

    <target name="clean">
        <insightBuild target="clean"/>
        <antcall target="lifecycle.clean" inheritAll="true" inheritRefs="true"/>
    </target>

    <target name="copy-zips">
        <description>
            Copies and renames the zips from the insight internal build (OUT/dist)
            to target, stripping version numbers so Ivy can find them.
        </description>
        <!-- Hard coding paths for the moment to work around hudson regex issues -->
        <copy todir="${target.dir}">
            <fileset dir="${basedir}/OUT/dist" includes="OMERO.insight*.zip" excludes="*-mac*.zip,*-win*.zip"/>
            <mapper type="regexp" from="OMERO.insight-[^-]+(.*).zip"  to="insight.zip"/>
        </copy>
        <copy todir="${target.dir}">
            <fileset dir="${basedir}/OUT/dist" includes="OMERO.insight*-win.zip"/>
            <mapper type="regexp" from="OMERO.insight-[^-]+(.*).zip"  to="insight-win.zip"/>
        </copy>
        <copy todir="${target.dir}">
            <fileset dir="${basedir}/OUT/dist" includes="OMERO.insight*-win-openGL.zip"/>
            <mapper type="regexp" from="OMERO.insight-[^-]+(.*).zip"  to="insight-win-openGL.zip"/>
        </copy>
        <copy todir="${target.dir}">
            <fileset dir="${basedir}/OUT/dist" includes="OMERO.insight*-win64-openGL.zip"/>
            <mapper type="regexp" from="OMERO.insight-[^-]+(.*).zip"  to="insight-win64-openGL.zip"/>
        </copy>
        <copy todir="${target.dir}">
            <fileset dir="${basedir}/OUT/dist" includes="OMERO.insight*-mac.zip"/>
            <mapper type="regexp" from="OMERO.insight-[^-]+(.*).zip"  to="insight-mac.zip"/>
        </copy>
        <copy todir="${target.dir}">
            <fileset dir="${basedir}/OUT/dist" includes="OMERO.insight*-mac-openGL.zip"/>
            <mapper type="regexp" from="OMERO.insight-[^-]+(.*).zip"  to="insight-mac-openGL.zip"/>
        </copy>
        <copy todir="${target.dir}">
            <fileset dir="${basedir}/OUT/dist" includes="OMERO.editor*-mac.zip"/>
            <mapper type="regexp" from="OMERO.editor-[^-]+(.*).zip"  to="editor-mac.zip"/>
        </copy>
        <copy todir="${target.dir}">
            <fileset dir="${basedir}/OUT/dist" includes="OMERO.editor*-win.zip"/>
            <mapper type="regexp" from="OMERO.editor-[^-]+(.*).zip"  to="editor-win.zip"/>
        </copy>
    </target>

    <target name="publish-artifacts" depends="prepare">
        <description>
            Primarily to test that all of the many zips generated by the internal
            insight build can be properly published without having to recompile.
        </description>
        <publishArtifact/>
    </target>

</project>
