#
# OmeroBlitz example configuration file
# -------------------------------------
#
# Configuration files are usable by all clients to modify
# connection information for connecting to an OMERO.blitz
# server by editing the environment parameter: ICE_CONFIG
#
# Rather than editing this file, it is also possible
# to use a multiple file argument to Ice.Config, e.g.:
#
#   export ICE_CONFIG=etc/ice.config,etc/private.config
#
# where later configuration files take precedence. Finally,
# some clients may also support passing options over the
# command-line:
#
#   ./myClient --Ice.Config=etc/private.config --omero.pass=secret
#
# depending on whether or not the client passes command-line
# arguments to the omero.client constructor.
#
# So in general, a configuration file is unnecessary since
# all required parameters can be provided via omero.client
# methods:
#
#   omero.client c = new omero.client("localhost", myPort)
#   c.createSession(user, password)
#
# but can be useful none the less.


# Properties, examples, and explanations
# --------------------------------------

# Ice.Default.Router is the main property for connecting to
# a server. By default, omero uses a template value and
# replaces @omero.host@ and @omero.port@ with the given
# values. If a non-template string is provided, it will
# be used directly.

## Ice.Default.Router=OMERO.Glacier2/router:tcp -p @omero.port@ -h @omero.host@ (default)
## Ice.Default.Router=OMERO.Glacier2/router:tcp -p 10000 -h host.example.com


# Instead of defining the entire Ice.Default.Router property,
# it is also an option to specify just omero.host which will
# be inserted into a template Ice.Default.Router

omero.host=localhost


# If your blitz server runs on a non-standard port (not 4064)
# then omero.port can also be set.

## omero.port=4064 (default)
## omero.port=14064

# Login information can also be provided via configuration
# files, though storing passwords in config files can be
# dangerous.

omero.user=user
omero.pass=SUPER_SECRET


# If keep_alive > 0, then every keep_alive seconds a call
# will be made on the current session to keep it alive.
# If no session is present, this is a no-op. Calling the
# client.enableKeepAlive() method will have the same effect as
# setting this property.

# omero.keep_alive=-1 (disabled by default)

# All "omero.ClientCallback.*" properties configure the
# object adapter in each omero.client instance used for
# server callbacks. Any property beginning with
# "omero.ClientCallback" which the Ice runtime does
# not understand will issue a warning.

# Other properties: Any prefix preferenced with "omero"
# will be parsed by the omero.client objects in all available
# languages.
#
# For example, the following is used in the test cases for
# creating a root login.

omero.rootpass=omero


# By setting omero.dump to any non-empty property, all
# the settings for the current communicator will be printed
# on creation. Careful: This prints your password.

## omero.dump=1


#
# Other Ice properties
#

# Determines the block size of byte arrays used for
# uploading and downloading binary data.

## omero.block_size=5000000


# Determines the maximum size of any single message which
# can be recieved from or sent to OMERO.blitz. This value
# can be lowered to prevent memory exhaustion, but if an
# overly large message is sent to the client, then an
# exception will be thrown. If the client tries to send
# too much information in one call to the server, the
# server's setting for MessageSizeMax will determine
# whether or not an exception is thrown.

## Ice.MessageSizeMax=65536


# Each Ice communicator maintains two thread pools.
# One for outgoing connections ("Client") and one
# for incoming connectiosn ("Server"). If a series
# of calls uses all available threads but is still
# waiting on a connection, all threads will block!

## Ice.ThreadPool.Client.SizeMax=50
## Ice.ThreadPool.Server.SizeMax=50

## Ice.ThreadPool.Client.Size=1
## Ice.ThreadPool.Server.Size=1


# Length of time that an attempt to form a connection
# will block before throwing Ice::ConnectTimeoutException.
# This is primarily of importance during createSession()

## Ice.Override.ConnectTimeout=5000

# Garbage collection times (in secs) C++ only

## Ice.GC.Interval=60

# Logging: The Ice runtime has a number of logging statements
# from trace to warning levels. See the appendix of the online
# documentation for more choices.

## Ice.Warn.Connections=0
## Ice.Trace.GC=0

# Security: By default, all OMERO clients prefer to use
# use a secure connection. By setting the following
# property, a secure connection is required and if one
# is not available, Ice::NoEndpointException will be
# thrown.

## Ice.Override.Secure=1
